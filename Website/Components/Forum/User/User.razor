@namespace SharpScape.Website.Components.Forum

@inject HttpClient Http
@using SharpScape.Shared.Dto
@using SharpScape.Website.Services
@inject IJSRuntime JSRuntime;
<div class="card">
    <div class="row align-items-center">
        <div class="col-md-9 mb-3 mb-sm-0">
            <h5>
                <a href="user/@Id" class="text-primary" onclick="">@Username</a>
            </h5>
            <p class="text-sm">
                <a class="text-black" href="#">@Email</a>
            </p>
            <div class="text-sm op-5"> 
                <a class="text-black" href="#">@Date</a> 
            </div>
        </div>
        <div class="col-md-3 op-7">
            <div class="row text-center op-7">
                <div class="col px-1"> <i class="oi oi-credit-card icon-1x like"></i> <span class="d-block text-sm">@Id</span> </div>
                <div class="col px-1"> <i onclick="@OpenCreateThread" class="oi oi-key icon-1x"></i> <span class="d-block text-sm">@Role</span> </div>
            </div>
        </div>
    </div>
</div>
@if (CreateThread)
    {
        <div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Update Role</h4>
                    </div>
                    <EditForm Model="@tUser" OnValidSubmit=@UpdateRole>
                        <div class="modal-body">
                            <div class="dropdown bootstrap-select form-control form-control-lg bg-white bg-op-9 text-sm w-lg-50" style="width: 100%;">
                                <select @bind="@tRole" class="form-control form-control-lg bg-white bg-op-9 text-sm w-lg-50" data-toggle="select" tabindex="-98">
                                    <option value=""></option>
                                    <option value="User">User</option>
                                    <option value="Admin">Admin</option>
                                </select>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" @onclick="@CloseCreateThread">Close</button>
                            <button type="submit" class="btn btn-primary">Create</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    }
@code{
    [Parameter]
    public string Route { get; set; }
    [Parameter]
    public string Id { get; set; }
    [Parameter]
    public string Role { get; set; }
    [Parameter]
    public string Username { get; set; }
    [Parameter]
    public string Date{ get; set; }
    [Parameter]
    public string Email { get; set; }
    [Parameter]
    public int ThreadId{ get; set; }
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }
    [Parameter]
    public Action RefreshMethod{ get; set; }
    public bool CreateThread { get; set; } = false;
    public string tRole {get;set;}
    UserRoleDto tUser = new UserRoleDto();
    private async void UpdateRole()
    {
        await JSRuntime.InvokeVoidAsync("console.log",tRole);
        tUser.Role = tRole;
        CreateThread = false;
        var result = await Http.PutAsJsonAsync($"/api/User/UpdateRole?id={Id}",tUser);
        RefreshMethod.Invoke();
    }
    /// methods for popup modal
    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }
    private void OpenCreateThread()
    {
        CreateThread = true;
        StateHasChanged();
    }
    private void CloseCreateThread()
    {
        CreateThread = false;
        StateHasChanged();
    }
}